buildscript {
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
  id "com.jfrog.artifactory" version "4.4.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

// This is used as the docker image prefix (org)
group = 'tricky42'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'yaas-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true           
        }
    }
    resolve {
        repository {
            repoKey = 'hybris-repository'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

task buildDocker(type: Docker, dependsOn: build) {
  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

/*
configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}
*/

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") 
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("com.hybris.bananas-sdk:service-sdk-spring-boot-starter:2.5.1")
    //compile("org.springframework.boot:spring-boot-starter-jetty")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
